MODULE EncStdMap_mac_roman;

	(* This file was generated automatically *)

	(* Source: http://www.unicode.org/Public/MAPPINGS/VENDORS/MICSFT/MAC/ROMAN.TXT *)

	IMPORT Codecs := EncCodecs;

	TYPE
		Encoder = POINTER TO RECORD (Codecs.Encoder) END;
		Decoder = POINTER TO RECORD (Codecs.Decoder) END;

	(* Encoder *)

	PROCEDURE (e: Encoder) Encode (IN f: ARRAY OF CHAR; VAR fR, fLen: INTEGER; VAR t: ARRAY OF SHORTCHAR; VAR tW: INTEGER);
		VAR x, y: INTEGER;
	BEGIN
		WHILE fLen > 0 DO
			x := ORD(f[fR]);
			CASE x OF
			| 00H..7FH,0A2H,0A3H,0A9H,0B1H,0B5H: y := 00H + x
			| 0BFH: y := 0C0H
			| 0BAH: y := 0BCH
			| 2022H: y := 0A5H
			| 0A8H: y := 0ACH
			| 2044H: y := 0DAH
			| 2122H: y := 0AAH
			| 0C3H: y := 0CCH
			| 2020H: y := 0A0H
			| 0C0H: y := 0CBH
			| 0BBH: y := 0C8H
			| 0A5H: y := 0B4H
			| 0AAH: y := 0BBH
			| 221EH: y := 0B0H
			| 2248H: y := 0C5H
			| 0ACH: y := 0C2H
			| 2126H: y := 0BDH
			| 0DAH,0DBH: y := 18H + x
			| 0131H: y := 0F5H
			| 0FB01H,0FB02H: y := -0FA23H + x
			| 0D3H,0D4H,0D9H: y := 1BH + x
			| 0ABH,0CAH: y := 1CH + x
			| 0CBH,0CDH..0CFH: y := 1DH + x
			| 0D2H: y := 0F1H
			| 0A1H: y := 0C1H
			| 0C8H,0CCH: y := 21H + x
			| 0FAH: y := 9CH
			| 0C2H: y := 0E5H
			| 0F3H,0F6H,0F9H: y := -5CH + x
			| 0E9H,0EDH,0F1H,0F4H: y := -5BH + x
			| 0C1H: y := 0E7H
			| 0E2H,0E5H,0E8H,0ECH: y := -59H + x
			| 0E0H,0E3H: y := -58H + x
			| 02DBH: y := 0FEH
			| 0A0H,0B7H: y := 2AH + x
			| 0D6H: y := 85H
			| 02C6H: y := 0F6H
			| 201AH: y := 0E2H
			| 0192H: y := 0C4H
			| 0D1H: y := 84H
			| 2030H: y := 0E4H
			| 02DCH: y := 0F7H
			| 201CH,201DH: y := -1F4AH + x
			| 0A4H: y := 0DBH
			| 02C7H: y := 0FFH
			| 2202H: y := 0B6H
			| 0C9H: y := 83H
			| 0C7H: y := 82H
			| 0C4H,0C5H: y := -44H + x
			| 2013H,2014H: y := -1F43H + x
			| 2021H: y := 0E0H
			| 2206H: y := 0C6H
			| 02DDH: y := 0FDH
			| 0B8H: y := 0FCH
			| 201EH: y := 0E3H
			| 0F8H: y := 0BFH
			| 0DFH: y := 0A7H
			| 0AFH: y := 0F8H
			| 2260H: y := 0ADH
			| 2264H,2265H: y := -21B2H + x
			| 25CAH: y := 0D7H
			| 0FBH,0FCH: y := -5DH + x
			| 02D8H..02DAH: y := -01DFH + x
			| 0D8H: y := 0AFH
			| 0E6H: y := 0BEH
			| 0FFH: y := 0D8H
			| 222BH: y := 0BAH
			| 220FH,221AH: y := -2157H + x
			| 0F7H: y := 0D6H
			| 0178H: y := 0D9H
			| 2026H,2039H,203AH: y := -1F5DH + x
			| 0E1H,0E4H,0E7H,0EAH,0EBH,0EEH,0EFH,0F2H,0F5H: y := -5AH + x
			| 0C6H: y := 0AEH
			| 2018H,2019H: y := -1F44H + x
			| 2211H: y := 0B7H
			| 0DCH: y := 86H
			| 0B6H: y := 0A6H
			| 0B0H: y := 0A1H
			| 0B4H: y := 0ABH
			| 0D5H: y := 0CDH
			| 03C0H: y := 0B9H
			| 0AEH: y := 0A8H
			| 0152H,0153H: y := -84H + x
			| 0A7H: y := 0A4H
			ELSE
				RETURN
			END;
			t[tW] := SHORT(CHR(y)); INC(tW);
			INC(fR); DEC(fLen)
		END
	END Encode;

	PROCEDURE NewEncoder* (): Codecs.Encoder;
		VAR e: Encoder;
	BEGIN
		NEW(e); RETURN e
	END NewEncoder;

	(* Decoder *)

	PROCEDURE (d: Decoder) Decode (IN f: ARRAY OF SHORTCHAR; VAR fR, fLen: INTEGER; VAR t: ARRAY OF CHAR; VAR tW: INTEGER; OUT state: BOOLEAN);
		VAR x, y: INTEGER;
	BEGIN
		WHILE fLen > 0 DO
			x := ORD(f[fR]);
			CASE x OF
			| 00H..7FH,0A2H,0A3H,0A9H,0B1H,0B5H: y := 00H + x
			| 0A0H: y := 2020H
			| 0D7H: y := 25CAH
			| 0A4H: y := 0A7H
			| 0CEH,0CFH: y := 84H + x
			| 0CAH,0E1H: y := -2AH + x
			| 0A8H: y := 0AEH
			| 0B9H: y := 03C0H
			| 0CDH: y := 0D5H
			| 0ABH: y := 0B4H
			| 0FCH: y := 0B8H
			| 0A1H: y := 0B0H
			| 0A6H: y := 0B6H
			| 0E5H: y := 0C2H
			| 0C5H: y := 2248H
			| 0AEH: y := 0C6H
			| 0D4H,0D5H: y := 1F44H + x
			| 0B7H: y := 2211H
			| 0D9H: y := 0178H
			| 0D6H: y := 0F7H
			| 0DEH,0DFH: y := 0FA23H + x
			| 0BAH: y := 222BH
			| 0BEH: y := 0E6H
			| 0AFH: y := 0D8H
			| 0C9H,0DCH,0DDH: y := 1F5DH + x
			| 0B2H,0B3H: y := 21B2H + x
			| 0ADH: y := 2260H
			| 0F2H,0F3H: y := -18H + x
			| 0F9H..0FBH: y := 01DFH + x
			| 0F8H: y := 0AFH
			| 0A7H: y := 0DFH
			| 0BFH: y := 0F8H
			| 0E3H: y := 201EH
			| 0F5H: y := 0131H
			| 0CBH: y := 0C0H
			| 0C6H: y := 2206H
			| 0E0H: y := 2021H
			| 0D0H,0D1H: y := 1F43H + x
			| 80H,81H: y := 44H + x
			| 82H: y := 0C7H
			| 83H: y := 0C9H
			| 0FFH: y := 02C7H
			| 0DBH: y := 0A4H
			| 0D2H,0D3H: y := 1F4AH + x
			| 0B6H: y := 2202H
			| 84H: y := 0D1H
			| 0C4H: y := 0192H
			| 0E7H: y := 0C1H
			| 85H: y := 0D6H
			| 0E2H: y := 201AH
			| 0FDH: y := 02DDH
			| 86H: y := 0DCH
			| 0B8H,0C3H: y := 2157H + x
			| 88H,8BH: y := 58H + x
			| 89H,8CH,8FH,93H: y := 59H + x
			| 87H,8AH,8DH,90H,91H,94H,95H,98H,9BH: y := 5AH + x
			| 8EH,92H,96H,99H: y := 5BH + x
			| 97H,9AH,9DH: y := 5CH + x
			| 9EH,9FH: y := 5DH + x
			| 9CH: y := 0FAH
			| 0E9H,0EDH: y := -21H + x
			| 0C1H: y := 0A1H
			| 0F1H: y := 0D2H
			| 0E8H,0EAH..0ECH: y := -1DH + x
			| 0C7H,0E6H: y := -1CH + x
			| 0EEH,0EFH,0F4H: y := -1BH + x
			| 0E4H: y := 2030H
			| 0BDH: y := 2126H
			| 0C2H: y := 0ACH
			| 0D8H: y := 0FFH
			| 0DAH: y := 2044H
			| 0B0H: y := 221EH
			| 0BBH: y := 0AAH
			| 0B4H: y := 0A5H
			| 0C8H: y := 0BBH
			| 0F6H: y := 02C6H
			| 0C0H: y := 0BFH
			| 0CCH: y := 0C3H
			| 0AAH: y := 2122H
			| 0F7H: y := 02DCH
			| 0FEH: y := 02DBH
			| 0ACH: y := 0A8H
			| 0A5H: y := 2022H
			| 0BCH: y := 0BAH
			ELSE
				RETURN
			END;
			t[tW] := CHR(y); INC(tW);
			INC(fR); DEC(fLen)
		END;
		state := FALSE
	END Decode;

	PROCEDURE (d: Decoder) Reset, EMPTY;

	PROCEDURE NewDecoder* (): Codecs.Decoder;
		VAR d: Decoder;
	BEGIN
		NEW(d); RETURN d
	END NewDecoder;

END EncStdMap_mac_roman.