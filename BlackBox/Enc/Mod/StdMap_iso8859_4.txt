MODULE EncStdMap_iso8859_4;

	(* This file was generated automatically *)

	(* Source: http://www.unicode.org/Public/MAPPINGS/ISO8859/8859-4.TXT *)

	IMPORT Codecs := EncCodecs;

	TYPE
		Encoder = POINTER TO RECORD (Codecs.Encoder) END;
		Decoder = POINTER TO RECORD (Codecs.Decoder)
			b: INTEGER;
			st: INTEGER; (* 0 - no state, > 0 - number of chars expected, -1 - error *)
		END;

	(* Encoder *)

	PROCEDURE (e: Encoder) Encode (IN f: ARRAY OF CHAR; VAR fR, fLen: INTEGER; VAR t: ARRAY OF SHORTCHAR; VAR tW: INTEGER);
		VAR x, y: INTEGER;
	BEGIN
		WHILE fLen > 0 DO
			x := ORD(f[fR]);
			CASE x OF
			| 00H..0A0H: y := x
			| 0A4H: y := 0A4H
			| 0A7H..0A8H: y := x
			| 0ADH: y := 0ADH
			| 0AFH..0B0H: y := x
			| 0B4H: y := 0B4H
			| 0B8H: y := 0B8H
			| 0C1H..0C6H: y := x
			| 0C9H: y := 0C9H
			| 0CBH: y := 0CBH
			| 0CDH..0CEH: y := x
			| 0D4H..0D8H: y := x
			| 0DAH..0DCH: y := x
			| 0DFH: y := 0DFH
			| 0E1H..0E6H: y := x
			| 0E9H: y := 0E9H
			| 0EBH: y := 0EBH
			| 0EDH..0EEH: y := x
			| 0F4H..0F8H: y := x
			| 0FAH..0FCH: y := x
			| 0100H: y := 0C0H
			| 0101H: y := 0E0H
			| 0104H: y := 0A1H
			| 0105H: y := 0B1H
			| 010CH: y := 0C8H
			| 010DH: y := 0E8H
			| 0110H: y := 0D0H
			| 0111H: y := 0F0H
			| 0112H: y := 0AAH
			| 0113H: y := 0BAH
			| 0116H: y := 0CCH
			| 0117H: y := 0ECH
			| 0118H: y := 0CAH
			| 0119H: y := 0EAH
			| 0122H: y := 0ABH
			| 0123H: y := 0BBH
			| 0128H: y := 0A5H
			| 0129H: y := 0B5H
			| 012AH: y := 0CFH
			| 012BH: y := 0EFH
			| 012EH: y := 0C7H
			| 012FH: y := 0E7H
			| 0136H: y := 0D3H
			| 0137H: y := 0F3H
			| 0138H: y := 0A2H
			| 013BH: y := 0A6H
			| 013CH: y := 0B6H
			| 0145H: y := 0D1H
			| 0146H: y := 0F1H
			| 014AH: y := 0BDH
			| 014BH: y := 0BFH
			| 014CH: y := 0D2H
			| 014DH: y := 0F2H
			| 0156H: y := 0A3H
			| 0157H: y := 0B3H
			| 0160H: y := 0A9H
			| 0161H: y := 0B9H
			| 0166H: y := 0ACH
			| 0167H: y := 0BCH
			| 0168H: y := 0DDH
			| 0169H: y := 0FDH
			| 016AH: y := 0DEH
			| 016BH: y := 0FEH
			| 0172H: y := 0D9H
			| 0173H: y := 0F9H
			| 017DH: y := 0AEH
			| 017EH: y := 0BEH
			| 02C7H: y := 0B7H
			| 02D9H: y := 0FFH
			| 02DBH: y := 0B2H
			ELSE
				RETURN
			END;
			t[tW] := SHORT(CHR(y)); INC(tW);
			INC(fR);
			DEC(fLen)
		END
	END Encode;

	PROCEDURE NewEncoder* (): Codecs.Encoder;
		VAR e: Encoder;
	BEGIN
		NEW(e); RETURN e
	END NewEncoder;

	(* Decoder *)

	PROCEDURE (d: Decoder) Decode (IN f: ARRAY OF SHORTCHAR; VAR fR, fLen: INTEGER; VAR t: ARRAY OF CHAR; VAR tW: INTEGER; OUT state: BOOLEAN);
		VAR x, y: INTEGER;
	BEGIN
		WHILE fLen > 0 DO
			x := ORD(f[fR]);

			CASE x OF
			| 00H..0A0H: y := x
			| 0A1H: y := 0104H
			| 0A2H: y := 0138H
			| 0A3H: y := 0156H
			| 0A4H: y := 0A4H
			| 0A5H: y := 0128H
			| 0A6H: y := 013BH
			| 0A7H..0A8H: y := x
			| 0A9H: y := 0160H
			| 0AAH: y := 0112H
			| 0ABH: y := 0122H
			| 0ACH: y := 0166H
			| 0ADH: y := 0ADH
			| 0AEH: y := 017DH
			| 0AFH..0B0H: y := x
			| 0B1H: y := 0105H
			| 0B2H: y := 02DBH
			| 0B3H: y := 0157H
			| 0B4H: y := 0B4H
			| 0B5H: y := 0129H
			| 0B6H: y := 013CH
			| 0B7H: y := 02C7H
			| 0B8H: y := 0B8H
			| 0B9H: y := 0161H
			| 0BAH: y := 0113H
			| 0BBH: y := 0123H
			| 0BCH: y := 0167H
			| 0BDH: y := 014AH
			| 0BEH: y := 017EH
			| 0BFH: y := 014BH
			| 0C0H: y := 0100H
			| 0C1H..0C6H: y := x
			| 0C7H: y := 012EH
			| 0C8H: y := 010CH
			| 0C9H: y := 0C9H
			| 0CAH: y := 0118H
			| 0CBH: y := 0CBH
			| 0CCH: y := 0116H
			| 0CDH..0CEH: y := x
			| 0CFH: y := 012AH
			| 0D0H: y := 0110H
			| 0D1H: y := 0145H
			| 0D2H: y := 014CH
			| 0D3H: y := 0136H
			| 0D4H..0D8H: y := x
			| 0D9H: y := 0172H
			| 0DAH..0DCH: y := x
			| 0DDH: y := 0168H
			| 0DEH: y := 016AH
			| 0DFH: y := 0DFH
			| 0E0H: y := 0101H
			| 0E1H..0E6H: y := x
			| 0E7H: y := 012FH
			| 0E8H: y := 010DH
			| 0E9H: y := 0E9H
			| 0EAH: y := 0119H
			| 0EBH: y := 0EBH
			| 0ECH: y := 0117H
			| 0EDH..0EEH: y := x
			| 0EFH: y := 012BH
			| 0F0H: y := 0111H
			| 0F1H: y := 0146H
			| 0F2H: y := 014DH
			| 0F3H: y := 0137H
			| 0F4H..0F8H: y := x
			| 0F9H: y := 0173H
			| 0FAH..0FCH: y := x
			| 0FDH: y := 0169H
			| 0FEH: y := 016BH
			| 0FFH: y := 02D9H
			ELSE
				d.st := -1; RETURN
			END;

			t[tW] := CHR(y); INC(tW);

			INC(fR);
			DEC(fLen)
		END;

		IF d.st = 0 THEN state := FALSE
		ELSIF d.st > 0 THEN state := TRUE
		ELSE HALT(100)
		END
	END Decode;

	PROCEDURE (d: Decoder) Reset;
	BEGIN
		d.st := 0
	END Reset;

	PROCEDURE NewDecoder* (): Codecs.Decoder;
		VAR d: Decoder;
	BEGIN
		NEW(d); d.Reset; RETURN d
	END NewDecoder;

END EncStdMap_iso8859_4.