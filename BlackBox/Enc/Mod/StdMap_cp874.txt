MODULE EncStdMap_cp874;

	(* This file was generated automatically *)

	(* Source: http://www.unicode.org/Public/MAPPINGS/VENDORS/MICSFT/WINDOWS/CP874.TXT *)

	IMPORT Codecs := EncCodecs;

	TYPE
		Encoder = POINTER TO RECORD (Codecs.Encoder) END;
		Decoder = POINTER TO RECORD (Codecs.Decoder) END;

	(* Encoder *)

	PROCEDURE (e: Encoder) Encode (IN f: ARRAY OF CHAR; VAR fR, fLen: INTEGER; VAR t: ARRAY OF SHORTCHAR; VAR tW: INTEGER);
		VAR x, y: INTEGER;
	BEGIN
		WHILE fLen > 0 DO
			x := ORD(f[fR]);
			CASE x OF
			| 00H..7FH: y := x
			| 0A0H: y := 0A0H
			| 0E01H..0E3AH: y := x - 0D60H
			| 0E3FH..0E5BH: y := x - 0D60H
			| 2013H..2014H: y := x - 1F7DH
			| 2018H..2019H: y := x - 1F87H
			| 201CH..201DH: y := x - 1F89H
			| 2022H: y := 95H
			| 2026H: y := 85H
			| 20ACH: y := 80H
			ELSE
				RETURN
			END;
			t[tW] := SHORT(CHR(y)); INC(tW);
			INC(fR); DEC(fLen)
		END
	END Encode;

	PROCEDURE NewEncoder* (): Codecs.Encoder;
		VAR e: Encoder;
	BEGIN
		NEW(e); RETURN e
	END NewEncoder;

	(* Decoder *)

	PROCEDURE (d: Decoder) Decode (IN f: ARRAY OF SHORTCHAR; VAR fR, fLen: INTEGER; VAR t: ARRAY OF CHAR; VAR tW: INTEGER; OUT state: BOOLEAN);
		VAR x, y: INTEGER;
	BEGIN
		WHILE fLen > 0 DO
			x := ORD(f[fR]);
			CASE x OF
			| 00H..7FH: y := x
			| 80H: y := 20ACH
			| 85H: y := 2026H
			| 91H..92H: y := x + 1F87H
			| 93H..94H: y := x + 1F89H
			| 95H: y := 2022H
			| 96H..97H: y := x + 1F7DH
			| 0A0H: y := 0A0H
			| 0A1H..0DAH: y := x + 0D60H
			| 0DFH..0FBH: y := x + 0D60H
			ELSE
				RETURN
			END;
			t[tW] := CHR(y); INC(tW);
			INC(fR); DEC(fLen)
		END;
		state := FALSE
	END Decode;

	PROCEDURE (d: Decoder) Reset, EMPTY;

	PROCEDURE NewDecoder* (): Codecs.Decoder;
		VAR d: Decoder;
	BEGIN
		NEW(d); RETURN d
	END NewDecoder;

END EncStdMap_cp874.