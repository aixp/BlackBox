MODULE EncStdMap_mac_greek;

	(* This file was generated automatically *)

	(* Source: http://www.unicode.org/Public/MAPPINGS/VENDORS/MICSFT/MAC/GREEK.TXT *)

	IMPORT Codecs := EncCodecs;

	TYPE
		Encoder = POINTER TO RECORD (Codecs.Encoder) END;
		Decoder = POINTER TO RECORD (Codecs.Decoder) END;

	(* Encoder *)

	PROCEDURE (e: Encoder) Encode (IN f: ARRAY OF CHAR; VAR fR, fLen: INTEGER; VAR t: ARRAY OF SHORTCHAR; VAR tW: INTEGER);
		VAR x, y: INTEGER;
	BEGIN
		WHILE fLen > 0 DO
			x := ORD(f[fR]);
			CASE x OF
			| 00H..7FH,0A9H,0B1H: y := 00H + x
			| 03AAH: y := 0ABH
			| 0385H: y := 87H
			| 0A7H: y := 0ACH
			| 03A0H: y := 0A6H
			| 0384H,039EH,03A3H: y := -02F9H + x
			| 039BH: y := 0A4H
			| 03A6H,03A8H,03A9H: y := -02EAH + x
			| 0398H: y := 0A3H
			| 0BBH: y := 0C8H
			| 0393H,0394H: y := -02F2H + x
			| 0A5H: y := 0B4H
			| 03ABH,03CCH: y := -02EEH + x
			| 03CDH: y := 0E0H
			| 03ACH: y := 0C0H
			| 0ACH: y := 0C2H
			| 03C8H: y := 0E3H
			| 0ABH: y := 0C7H
			| 0391H,039CH: y := -02E1H + x
			| 0399H,039AH,03C6H: y := -02E0H + x
			| 0395H..0397H: y := -02DFH + x
			| 03A4H: y := 0C6H
			| 0FBH,0FCH: y := -5DH + x
			| 0F6H,0F9H: y := -5CH + x
			| 0E9H,0F4H: y := -5BH + x
			| 0E4H,0E7H,0EAH,0EBH,0EEH,0EFH: y := -5AH + x
			| 0E2H,0E8H: y := -59H + x
			| 0E0H: y := 88H
			| 0A0H: y := 0CAH
			| 2020H: y := 0A0H
			| 03BEH: y := 0EAH
			| 03C9H: y := 0F6H
			| 03ADH..03AFH: y := -02D2H + x
			| 0D6H: y := 85H
			| 03B1H,03B2H,03B4H,03B5H,03B9H,03BFH,03C0H,03C3H,03C4H: y := -02D0H + x
			| 03B7H,03BAH..03BDH,03C1H,03C7H,03CAH,03CBH: y := -02CFH + x
			| 2026H: y := 0C9H
			| 03B3H,03C5H: y := -02CCH + x
			| 03C2H: y := 0F7H
			| 201CH,201DH: y := -1F4AH + x
			| 0C9H: y := 83H
			| 0C4H: y := 80H
			| 03B8H: y := 0F5H
			| 2122H: y := 93H
			| 03B6H: y := 0FAH
			| 03A7H: y := 0CCH
			| 0388H: y := 0CEH
			| 0386H: y := 0CDH
			| 0B9H,0DFH: y := -38H + x
			| 038EH: y := 0DAH
			| 038CH: y := 0D9H
			| 0389H,038AH,03B0H: y := -02B2H + x
			| 2260H: y := 0ADH
			| 0B2H: y := 82H
			| 0B3H: y := 84H
			| 0392H,03A1H,03CEH: y := -02DDH + x
			| 2264H,2265H: y := -21B2H + x
			| 039DH,039FH: y := -02DCH + x
			| 0BDH: y := 97H
			| 2248H: y := 0C5H
			| 0F7H: y := 0D6H
			| 038FH: y := 0DFH
			| 0A8H: y := 8CH
			| 03A5H: y := 0CBH
			| 2030H: y := 98H
			| 2015H,2018H,2019H: y := -1F44H + x
			| 0390H: y := 0FDH
			| 2013H: y := 0D0H
			| 0A3H,0ADH: y := -11H + x
			| 0387H: y := 0AFH
			| 2022H: y := 96H
			| 0A6H: y := 9BH
			| 0AEH: y := 0A8H
			| 0153H: y := 0CFH
			| 0DCH: y := 86H
			| 0B0H: y := 0AEH
			ELSE
				RETURN
			END;
			t[tW] := SHORT(CHR(y)); INC(tW);
			INC(fR); DEC(fLen)
		END
	END Encode;

	PROCEDURE NewEncoder* (): Codecs.Encoder;
		VAR e: Encoder;
	BEGIN
		NEW(e); RETURN e
	END NewEncoder;

	(* Decoder *)

	PROCEDURE (d: Decoder) Decode (IN f: ARRAY OF SHORTCHAR; VAR fR, fLen: INTEGER; VAR t: ARRAY OF CHAR; VAR tW: INTEGER; OUT state: BOOLEAN);
		VAR x, y: INTEGER;
	BEGIN
		WHILE fLen > 0 DO
			x := ORD(f[fR]);
			CASE x OF
			| 00H..7FH,0A9H,0B1H: y := 00H + x
			| 0A0H: y := 2020H
			| 0AEH: y := 0B0H
			| 0C5H: y := 2248H
			| 0CFH: y := 0153H
			| 0CAH: y := 0A0H
			| 0A8H: y := 0AEH
			| 0C0H: y := 03ACH
			| 9BH: y := 0A6H
			| 96H: y := 2022H
			| 93H: y := 2122H
			| 92H,9CH: y := 11H + x
			| 0F5H: y := 03B8H
			| 0D9H: y := 038CH
			| 98H: y := 2030H
			| 0B5H,0C4H,0F1H: y := 02DDH + x
			| 8CH: y := 0A8H
			| 0CBH: y := 03A5H
			| 0D6H: y := 0F7H
			| 0CCH: y := 03A7H
			| 0FDH: y := 0390H
			| 97H: y := 0BDH
			| 0C1H,0C3H: y := 02DCH + x
			| 0D7H,0D8H,0FEH: y := 02B2H + x
			| 84H: y := 0B3H
			| 82H: y := 0B2H
			| 0B2H,0B3H: y := 21B2H + x
			| 0ADH: y := 2260H
			| 0DAH: y := 038EH
			| 81H,0A7H: y := 38H + x
			| 0CDH: y := 0386H
			| 0CEH: y := 0388H
			| 0DFH: y := 038FH
			| 0FAH: y := 03B6H
			| 0D0H: y := 2013H
			| 80H: y := 0C4H
			| 83H: y := 0C9H
			| 0D2H,0D3H: y := 1F4AH + x
			| 0F7H: y := 03C2H
			| 0E7H,0F9H: y := 02CCH + x
			| 0E8H,0EBH..0EEH,0F2H,0F8H,0FBH,0FCH: y := 02CFH + x
			| 0E1H,0E2H,0E4H,0E5H,0E9H,0EFH,0F0H,0F3H,0F4H: y := 02D0H + x
			| 85H: y := 0D6H
			| 0DBH..0DDH: y := 02D2H + x
			| 0F6H: y := 03C9H
			| 0EAH: y := 03BEH
			| 86H: y := 0DCH
			| 88H: y := 0E0H
			| 89H,8FH: y := 59H + x
			| 8AH,8DH,90H,91H,94H,95H: y := 5AH + x
			| 8EH,99H: y := 5BH + x
			| 9AH,9DH: y := 5CH + x
			| 9EH,9FH: y := 5DH + x
			| 0C6H: y := 03A4H
			| 0B6H..0B8H: y := 02DFH + x
			| 0B9H,0BAH,0E6H: y := 02E0H + x
			| 0B0H,0BBH: y := 02E1H + x
			| 0C7H: y := 0ABH
			| 0E3H: y := 03C8H
			| 0C9H: y := 2026H
			| 0BCH,0BEH,0BFH: y := 02EAH + x
			| 0AFH: y := 0387H
			| 0E0H: y := 03CDH
			| 0BDH,0DEH: y := 02EEH + x
			| 0B4H: y := 0A5H
			| 0A1H,0A2H: y := 02F2H + x
			| 0C8H: y := 0BBH
			| 0A3H: y := 0398H
			| 0A4H: y := 039BH
			| 0D1H,0D4H,0D5H: y := 1F44H + x
			| 8BH,0A5H,0AAH: y := 02F9H + x
			| 0A6H: y := 03A0H
			| 0ACH: y := 0A7H
			| 0C2H: y := 0ACH
			| 87H: y := 0385H
			| 0ABH: y := 03AAH
			ELSE
				RETURN
			END;
			t[tW] := CHR(y); INC(tW);
			INC(fR); DEC(fLen)
		END;
		state := FALSE
	END Decode;

	PROCEDURE (d: Decoder) Reset, EMPTY;

	PROCEDURE NewDecoder* (): Codecs.Decoder;
		VAR d: Decoder;
	BEGIN
		NEW(d); RETURN d
	END NewDecoder;

END EncStdMap_mac_greek.