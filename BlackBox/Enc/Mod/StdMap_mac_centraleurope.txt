MODULE EncStdMap_mac_centraleurope;

	(* This file was generated automatically *)

	(* Source: http://www.unicode.org/Public/MAPPINGS/VENDORS/MICSFT/MAC/LATIN2.TXT *)

	IMPORT Codecs := EncCodecs;

	TYPE
		Encoder = POINTER TO RECORD (Codecs.Encoder) END;
		Decoder = POINTER TO RECORD (Codecs.Decoder) END;

	(* Encoder *)

	PROCEDURE (e: Encoder) Encode (IN f: ARRAY OF CHAR; VAR fR, fLen: INTEGER; VAR t: ARRAY OF SHORTCHAR; VAR tW: INTEGER);
		VAR x, y: INTEGER;
	BEGIN
		WHILE fLen > 0 DO
			x := ORD(f[fR]);
			CASE x OF
			| 00H..7FH,0A3H,0A9H: y := 00H + x
			| 0100H,0101H,0117H,012EH,012FH,0160H,017CH: y := -7FH + x
			| 0104H,0116H,0144H,017BH: y := -80H + x
			| 0105H,010EH,011AH,011BH,0148H,014CH,0158H,0161H,016AH,016EH: y := -7DH + x
			| 0A8H: y := 0ACH
			| 0154H,0155H,0159H,016BH: y := -7BH + x
			| 0106H,0107H: y := -7AH + x
			| 012AH: y := 0B1H
			| 2122H: y := 0AAH
			| 012BH,0156H,0157H: y := -77H + x
			| 0118H: y := 0A2H
			| 0123H,014DH,015AH,015BH: y := -75H + x
			| 0BBH: y := 0C8H
			| 0119H: y := 0ABH
			| 2018H,2019H: y := -1F44H + x
			| 0ACH: y := 0C2H
			| 0DAH: y := 0F2H
			| 010FH,0139H,013AH,0164H,0165H,016FH..0173H: y := -7CH + x
			| 0D3H,0D4H,0DDH: y := 1BH + x
			| 0ABH: y := 0C7H
			| 0CDH: y := 0EAH
			| 0FAH: y := 9CH
			| 0FCH: y := 9FH
			| 0F3H,0F6H: y := -5CH + x
			| 0E9H,0EDH,0F4H: y := -5BH + x
			| 0C1H: y := 0E7H
			| 010CH,0151H: y := -83H + x
			| 221AH: y := 0C3H
			| 0A0H: y := 0CAH
			| 2020H: y := 0A0H
			| 0D6H: y := 85H
			| 201AH: y := 0E2H
			| 2202H: y := 0B6H
			| 201CH,201DH: y := -1F4AH + x
			| 02C7H: y := 0FFH
			| 0C9H: y := 83H
			| 0141H: y := 0FCH
			| 0C4H: y := 80H
			| 2013H,2014H: y := -1F43H + x
			| 0112H,0113H: y := -7EH + x
			| 2206H: y := 0C6H
			| 0137H: y := 0FAH
			| 201EH: y := 0E3H
			| 0DFH: y := 0A7H
			| 2260H: y := 0ADH
			| 2264H,2265H: y := -21B2H + x
			| 25CAH: y := 0D7H
			| 2026H,2039H,203AH: y := -1F5DH + x
			| 0179H,017AH: y := -0EAH + x
			| 0122H: y := 0FEH
			| 0145H,0146H: y := -86H + x
			| 0F7H: y := 0D6H
			| 2022H: y := 0A5H
			| 0E1H,0E4H,0F5H: y := -5AH + x
			| 0150H: y := 0CCH
			| 2211H: y := 0B7H
			| 017DH,017EH: y := -92H + x
			| 0A7H: y := 0A4H
			| 0B6H: y := 0A6H
			| 0B0H: y := 0A1H
			| 0142H: y := 0B8H
			| 0D5H: y := 0CDH
			| 0AEH: y := 0A8H
			| 0FDH: y := 0F9H
			| 0DCH: y := 86H
			| 010DH,013BH..013EH,0143H,0147H: y := -82H + x
			| 0136H: y := 0B5H
			ELSE
				RETURN
			END;
			t[tW] := SHORT(CHR(y)); INC(tW);
			INC(fR); DEC(fLen)
		END
	END Encode;

	PROCEDURE NewEncoder* (): Codecs.Encoder;
		VAR e: Encoder;
	BEGIN
		NEW(e); RETURN e
	END NewEncoder;

	(* Decoder *)

	PROCEDURE (d: Decoder) Decode (IN f: ARRAY OF SHORTCHAR; VAR fR, fLen: INTEGER; VAR t: ARRAY OF CHAR; VAR tW: INTEGER; OUT state: BOOLEAN);
		VAR x, y: INTEGER;
	BEGIN
		WHILE fLen > 0 DO
			x := ORD(f[fR]);
			CASE x OF
			| 00H..7FH,0A3H,0A9H: y := 00H + x
			| 84H,96H,0C4H,0FBH: y := 80H + x
			| 8BH,0B9H..0BCH,0C1H,0C5H: y := 82H + x
			| 89H,0CEH: y := 83H + x
			| 0CCH: y := 0150H
			| 0CAH: y := 0A0H
			| 0A8H: y := 0AEH
			| 0B5H: y := 0136H
			| 0CDH: y := 0D5H
			| 0B8H: y := 0142H
			| 0A1H: y := 0B0H
			| 0A6H: y := 0B6H
			| 0A0H: y := 2020H
			| 0A4H: y := 0A7H
			| 0D4H,0D5H: y := 1F44H + x
			| 0B7H: y := 2211H
			| 0D6H: y := 0F7H
			| 0FEH: y := 0122H
			| 0BFH,0C0H: y := 86H + x
			| 0D7H: y := 25CAH
			| 0C9H,0DCH,0DDH: y := 1F5DH + x
			| 0B2H,0B3H: y := 21B2H + x
			| 0ADH: y := 2260H
			| 0A7H: y := 0DFH
			| 0E3H: y := 201EH
			| 0FAH: y := 0137H
			| 0C6H: y := 2206H
			| 0D0H,0D1H: y := 1F43H + x
			| 80H: y := 0C4H
			| 0FCH: y := 0141H
			| 83H: y := 0C9H
			| 0FFH: y := 02C7H
			| 0D2H,0D3H: y := 1F4AH + x
			| 0B6H: y := 2202H
			| 0E7H: y := 0C1H
			| 85H: y := 0D6H
			| 0E2H: y := 201AH
			| 0F9H: y := 0FDH
			| 86H: y := 0DCH
			| 0C3H: y := 221AH
			| 87H,8AH,9BH: y := 5AH + x
			| 8EH,92H,99H: y := 5BH + x
			| 97H,9AH: y := 5CH + x
			| 9FH: y := 0FCH
			| 9CH: y := 0FAH
			| 0EAH: y := 0CDH
			| 0C7H: y := 0ABH
			| 0EEH,0EFH,0F8H: y := -1BH + x
			| 0F2H: y := 0DAH
			| 0ACH: y := 0A8H
			| 8FH,90H: y := 0EAH + x
			| 0EBH,0ECH: y := 92H + x
			| 0ABH: y := 0119H
			| 0A5H: y := 2022H
			| 0C2H: y := 0ACH
			| 0C8H: y := 0BBH
			| 0AEH,0D8H,0E5H,0E6H: y := 75H + x
			| 0A2H: y := 0118H
			| 0B4H,0DFH,0E0H: y := 77H + x
			| 0AAH: y := 2122H
			| 0B1H: y := 012AH
			| 8CH,8DH: y := 7AH + x
			| 0D9H,0DAH,0DEH,0F0H: y := 7BH + x
			| 93H,0BDH,0BEH,0E8H,0E9H,0F3H..0F7H: y := 7CH + x
			| 88H,91H,9DH,9EH,0CBH,0CFH,0DBH,0E4H,0EDH,0F1H: y := 7DH + x
			| 94H,95H: y := 7EH + x
			| 81H,82H,98H,0AFH,0B0H,0E1H,0FDH: y := 7FH + x
			ELSE
				RETURN
			END;
			t[tW] := CHR(y); INC(tW);
			INC(fR); DEC(fLen)
		END;
		state := FALSE
	END Decode;

	PROCEDURE (d: Decoder) Reset, EMPTY;

	PROCEDURE NewDecoder* (): Codecs.Decoder;
		VAR d: Decoder;
	BEGIN
		NEW(d); RETURN d
	END NewDecoder;

END EncStdMap_mac_centraleurope.