MODULE EncStdMap_kz1048;

	(* This file was generated automatically *)

	(* Source: http://www.unicode.org/Public/MAPPINGS/VENDORS/MISC/KZ1048.TXT *)

	IMPORT Codecs := EncCodecs;

	TYPE
		Encoder = POINTER TO RECORD (Codecs.Encoder) END;
		Decoder = POINTER TO RECORD (Codecs.Decoder)
			b: INTEGER;
			st: INTEGER; (* 0 - no state, > 0 - number of chars expected, -1 - error *)
		END;

	(* Encoder *)

	PROCEDURE (e: Encoder) Encode (IN f: ARRAY OF CHAR; VAR fR, fLen: INTEGER; VAR t: ARRAY OF SHORTCHAR; VAR tW: INTEGER);
		VAR x, y: INTEGER;
	BEGIN
		WHILE fLen > 0 DO
			x := ORD(f[fR]);
			CASE x OF
			| 00H..7FH: y := x
			| 0A0H: y := 0A0H
			| 0A4H: y := 0A4H
			| 0A6H..0A7H: y := x
			| 0A9H: y := 0A9H
			| 0ABH..0AEH: y := x
			| 0B0H..0B1H: y := x
			| 0B5H..0B7H: y := x
			| 0BBH: y := 0BBH
			| 0401H: y := 0A8H
			| 0402H..0403H: y := x - 0382H
			| 0406H: y := 0B2H
			| 0409H: y := 8AH
			| 040AH: y := 8CH
			| 040FH: y := 8FH
			| 0410H..044FH: y := x - 0350H
			| 0451H: y := 0B8H
			| 0452H: y := 90H
			| 0453H: y := 83H
			| 0456H: y := 0B3H
			| 0459H: y := 9AH
			| 045AH: y := 9CH
			| 045FH: y := 9FH
			| 0492H: y := 0AAH
			| 0493H: y := 0BAH
			| 049AH: y := 8DH
			| 049BH: y := 9DH
			| 04A2H..04A3H: y := x - 03E5H
			| 04AEH: y := 0AFH
			| 04AFH: y := 0BFH
			| 04B0H..04B1H: y := x - 040FH
			| 04BAH: y := 8EH
			| 04BBH: y := 9EH
			| 04D8H: y := 0A3H
			| 04D9H: y := 0BCH
			| 04E8H: y := 0A5H
			| 04E9H: y := 0B4H
			| 2013H..2014H: y := x - 1F7DH
			| 2018H..2019H: y := x - 1F87H
			| 201AH: y := 82H
			| 201CH..201DH: y := x - 1F89H
			| 201EH: y := 84H
			| 2020H..2021H: y := x - 1F9AH
			| 2022H: y := 95H
			| 2026H: y := 85H
			| 2030H: y := 89H
			| 2039H: y := 8BH
			| 203AH: y := 9BH
			| 20ACH: y := 88H
			| 2116H: y := 0B9H
			| 2122H: y := 99H
			ELSE
				RETURN
			END;
			t[tW] := SHORT(CHR(y)); INC(tW);
			INC(fR);
			DEC(fLen)
		END
	END Encode;

	PROCEDURE NewEncoder* (): Codecs.Encoder;
		VAR e: Encoder;
	BEGIN
		NEW(e); RETURN e
	END NewEncoder;

	(* Decoder *)

	PROCEDURE (d: Decoder) Decode (IN f: ARRAY OF SHORTCHAR; VAR fR, fLen: INTEGER; VAR t: ARRAY OF CHAR; VAR tW: INTEGER; OUT state: BOOLEAN);
		VAR x, y: INTEGER;
	BEGIN
		WHILE fLen > 0 DO
			x := ORD(f[fR]);

			CASE x OF
			| 00H..7FH: y := x
			| 80H..81H: y := x + 0382H
			| 82H: y := 201AH
			| 83H: y := 0453H
			| 84H: y := 201EH
			| 85H: y := 2026H
			| 86H..87H: y := x + 1F9AH
			| 88H: y := 20ACH
			| 89H: y := 2030H
			| 8AH: y := 0409H
			| 8BH: y := 2039H
			| 8CH: y := 040AH
			| 8DH: y := 049AH
			| 8EH: y := 04BAH
			| 8FH: y := 040FH
			| 90H: y := 0452H
			| 91H..92H: y := x + 1F87H
			| 93H..94H: y := x + 1F89H
			| 95H: y := 2022H
			| 96H..97H: y := x + 1F7DH
			| 99H: y := 2122H
			| 9AH: y := 0459H
			| 9BH: y := 203AH
			| 9CH: y := 045AH
			| 9DH: y := 049BH
			| 9EH: y := 04BBH
			| 9FH: y := 045FH
			| 0A0H: y := 0A0H
			| 0A1H..0A2H: y := x + 040FH
			| 0A3H: y := 04D8H
			| 0A4H: y := 0A4H
			| 0A5H: y := 04E8H
			| 0A6H..0A7H: y := x
			| 0A8H: y := 0401H
			| 0A9H: y := 0A9H
			| 0AAH: y := 0492H
			| 0ABH..0AEH: y := x
			| 0AFH: y := 04AEH
			| 0B0H..0B1H: y := x
			| 0B2H: y := 0406H
			| 0B3H: y := 0456H
			| 0B4H: y := 04E9H
			| 0B5H..0B7H: y := x
			| 0B8H: y := 0451H
			| 0B9H: y := 2116H
			| 0BAH: y := 0493H
			| 0BBH: y := 0BBH
			| 0BCH: y := 04D9H
			| 0BDH..0BEH: y := x + 03E5H
			| 0BFH: y := 04AFH
			| 0C0H..0FFH: y := x + 0350H
			ELSE
				d.st := -1; RETURN
			END;

			t[tW] := CHR(y); INC(tW);

			INC(fR);
			DEC(fLen)
		END;

		IF d.st = 0 THEN state := FALSE
		ELSIF d.st > 0 THEN state := TRUE
		ELSE HALT(100)
		END
	END Decode;

	PROCEDURE (d: Decoder) Reset;
	BEGIN
		d.st := 0
	END Reset;

	PROCEDURE NewDecoder* (): Codecs.Decoder;
		VAR d: Decoder;
	BEGIN
		NEW(d); d.Reset; RETURN d
	END NewDecoder;

END EncStdMap_kz1048.