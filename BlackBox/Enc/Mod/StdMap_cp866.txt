MODULE EncStdMap_cp866;

	(* This file was generated automatically *)

	(* Source: http://www.unicode.org/Public/MAPPINGS/VENDORS/MICSFT/PC/CP866.TXT *)

	IMPORT Codecs := EncCodecs;

	TYPE
		Encoder = POINTER TO RECORD (Codecs.Encoder) END;
		Decoder = POINTER TO RECORD (Codecs.Decoder) END;

	(* Encoder *)

	PROCEDURE (e: Encoder) Encode (IN f: ARRAY OF CHAR; VAR fR, fLen: INTEGER; VAR t: ARRAY OF SHORTCHAR; VAR tW: INTEGER);
		VAR x, y: INTEGER;
	BEGIN
		WHILE fLen > 0 DO
			x := ORD(f[fR]);
			CASE x OF
			| 00H..7FH: y := x
			| 0A0H: y := 0FFH
			| 0A4H: y := 0FDH
			| 0B0H: y := 0F8H
			| 0B7H: y := 0FAH
			| 0401H: y := 0F0H
			| 0404H: y := 0F2H
			| 0407H: y := 0F4H
			| 040EH: y := 0F6H
			| 0410H..043FH: y := x - 0390H
			| 0440H..044FH: y := x - 0360H
			| 0451H: y := 0F1H
			| 0454H: y := 0F3H
			| 0457H: y := 0F5H
			| 045EH: y := 0F7H
			| 2116H: y := 0FCH
			| 2219H: y := 0F9H
			| 221AH: y := 0FBH
			| 2500H: y := 0C4H
			| 2502H: y := 0B3H
			| 250CH: y := 0DAH
			| 2510H: y := 0BFH
			| 2514H: y := 0C0H
			| 2518H: y := 0D9H
			| 251CH: y := 0C3H
			| 2524H: y := 0B4H
			| 252CH: y := 0C2H
			| 2534H: y := 0C1H
			| 253CH: y := 0C5H
			| 2550H: y := 0CDH
			| 2551H: y := 0BAH
			| 2552H..2553H: y := x - 247DH
			| 2554H: y := 0C9H
			| 2555H: y := 0B8H
			| 2556H: y := 0B7H
			| 2557H: y := 0BBH
			| 2558H: y := 0D4H
			| 2559H: y := 0D3H
			| 255AH: y := 0C8H
			| 255BH: y := 0BEH
			| 255CH: y := 0BDH
			| 255DH: y := 0BCH
			| 255EH..255FH: y := x - 2498H
			| 2560H: y := 0CCH
			| 2561H..2562H: y := x - 24ACH
			| 2563H: y := 0B9H
			| 2564H..2565H: y := x - 2493H
			| 2566H: y := 0CBH
			| 2567H..2568H: y := x - 2498H
			| 2569H: y := 0CAH
			| 256AH: y := 0D8H
			| 256BH: y := 0D7H
			| 256CH: y := 0CEH
			| 2580H: y := 0DFH
			| 2584H: y := 0DCH
			| 2588H: y := 0DBH
			| 258CH: y := 0DDH
			| 2590H: y := 0DEH
			| 2591H..2593H: y := x - 24E1H
			| 25A0H: y := 0FEH
			ELSE
				RETURN
			END;
			t[tW] := SHORT(CHR(y)); INC(tW);
			INC(fR); DEC(fLen)
		END
	END Encode;

	PROCEDURE NewEncoder* (): Codecs.Encoder;
		VAR e: Encoder;
	BEGIN
		NEW(e); RETURN e
	END NewEncoder;

	(* Decoder *)

	PROCEDURE (d: Decoder) Decode (IN f: ARRAY OF SHORTCHAR; VAR fR, fLen: INTEGER; VAR t: ARRAY OF CHAR; VAR tW: INTEGER; OUT state: BOOLEAN);
		VAR x, y: INTEGER;
	BEGIN
		WHILE fLen > 0 DO
			x := ORD(f[fR]);
			CASE x OF
			| 00H..7FH: y := x
			| 80H..0AFH: y := x + 0390H
			| 0B0H..0B2H: y := x + 24E1H
			| 0B3H: y := 2502H
			| 0B4H: y := 2524H
			| 0B5H..0B6H: y := x + 24ACH
			| 0B7H: y := 2556H
			| 0B8H: y := 2555H
			| 0B9H: y := 2563H
			| 0BAH: y := 2551H
			| 0BBH: y := 2557H
			| 0BCH: y := 255DH
			| 0BDH: y := 255CH
			| 0BEH: y := 255BH
			| 0BFH: y := 2510H
			| 0C0H: y := 2514H
			| 0C1H: y := 2534H
			| 0C2H: y := 252CH
			| 0C3H: y := 251CH
			| 0C4H: y := 2500H
			| 0C5H: y := 253CH
			| 0C6H..0C7H: y := x + 2498H
			| 0C8H: y := 255AH
			| 0C9H: y := 2554H
			| 0CAH: y := 2569H
			| 0CBH: y := 2566H
			| 0CCH: y := 2560H
			| 0CDH: y := 2550H
			| 0CEH: y := 256CH
			| 0CFH..0D0H: y := x + 2498H
			| 0D1H..0D2H: y := x + 2493H
			| 0D3H: y := 2559H
			| 0D4H: y := 2558H
			| 0D5H..0D6H: y := x + 247DH
			| 0D7H: y := 256BH
			| 0D8H: y := 256AH
			| 0D9H: y := 2518H
			| 0DAH: y := 250CH
			| 0DBH: y := 2588H
			| 0DCH: y := 2584H
			| 0DDH: y := 258CH
			| 0DEH: y := 2590H
			| 0DFH: y := 2580H
			| 0E0H..0EFH: y := x + 0360H
			| 0F0H: y := 0401H
			| 0F1H: y := 0451H
			| 0F2H: y := 0404H
			| 0F3H: y := 0454H
			| 0F4H: y := 0407H
			| 0F5H: y := 0457H
			| 0F6H: y := 040EH
			| 0F7H: y := 045EH
			| 0F8H: y := 0B0H
			| 0F9H: y := 2219H
			| 0FAH: y := 0B7H
			| 0FBH: y := 221AH
			| 0FCH: y := 2116H
			| 0FDH: y := 0A4H
			| 0FEH: y := 25A0H
			| 0FFH: y := 0A0H
			ELSE
				RETURN
			END;
			t[tW] := CHR(y); INC(tW);
			INC(fR); DEC(fLen)
		END;
		state := FALSE
	END Decode;

	PROCEDURE (d: Decoder) Reset, EMPTY;

	PROCEDURE NewDecoder* (): Codecs.Decoder;
		VAR d: Decoder;
	BEGIN
		NEW(d); RETURN d
	END NewDecoder;

END EncStdMap_cp866.