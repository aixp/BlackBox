	TYPE
		(* FreeBSD 14.3 /usr/include/x86/_types.h *)
			__register_t = int32_t;
		(* FreeBSD 14.3 /usr/include/x86/ucontext.h *)
			mcontext_t* = RECORD [untagged]
				mc_onstack: __register_t; (* XXX - sigcontext compat. *)
				mc_gs: __register_t; (* machine state (struct trapframe) *)
				mc_fs: __register_t;
				mc_es: __register_t;
				mc_ds: __register_t;
				mc_edi: __register_t;
				mc_esi: __register_t;
				mc_ebp-: __register_t;
				mc_isp: __register_t;
				mc_ebx: __register_t;
				mc_edx: __register_t;
				mc_ecx: __register_t;
				mc_eax: __register_t;
				mc_trapno: __register_t;
				mc_err: __register_t;
				mc_eip-: __register_t;
				mc_cs: __register_t;
				mc_eflags: __register_t;
				mc_esp-: __register_t;
				mc_ss: __register_t;

				mc_len: int; (* sizeof(mcontext_t) *)
				mc_fpformat: int;
				mc_ownedfp: int;
				mc_flags: __register_t;
				mc_fpstate: ARRAY [untagged] 128 OF int; (* FIXME: __aligned(16) *)

				mc_fsbase: __register_t;
				mc_gsbase: __register_t;

				mc_xfpustate: __register_t;
				mc_xfpustate_len: __register_t;

				mc_spare2: ARRAY [untagged] 2 OF int
			END;

(*
	VAR
		errno*: INTEGER;
		stdin* ["__stdinp"]: PtrFILE;
*)

	PROCEDURE [ccall] __errno_location* ["__error"] (): PtrVoid;

	(* POSIX.1 *)
		PROCEDURE [ccall] stat* (path: PtrSTR; VAR sp: stat_t): int;

	(* POSIX.1 *)
		PROCEDURE [ccall] sigsetjmp* (VAR env: sigjmp_buf; savemask: int): int;
		PROCEDURE [ccall] siglongjmp* (VAR env: sigjmp_buf; val: int);

	(* POSIX.1 *)
		PROCEDURE [ccall] sigemptyset* (set: PtrSigset_t): int;
		PROCEDURE [ccall] sigfillset* (set: PtrSigset_t): int;
		PROCEDURE [ccall] sigaddset* (set: PtrSigset_t; signo: int): int;
		PROCEDURE [ccall] sigprocmask* (how: int; set: PtrSigset_t; oset: PtrSigset_t): int;

	(* POSIX.1 *)
		PROCEDURE [ccall] sigaction* (sig: int; VAR [nil] act: sigaction_t; VAR [nil] oact: sigaction_t): int;

	(* BSD *)
		PROCEDURE [ccall] sigaltstack* (VAR [nil] ss: stack_t; VAR [nil] oss: stack_t): int;

	(* POSIX.1 *)
		PROCEDURE [ccall] clock_gettime* (clock_id: clockid_t; VAR tp: timespec_t): int;

	(* AT&T UNIX *)
		PROCEDURE [ccall] time* (VAR [nil] tloc: time_t): time_t;

	(* AT&T UNIX *)
		PROCEDURE [ccall] gmtime* (VAR [nil] clock: time_t): tm;
		PROCEDURE [ccall] localtime* (VAR [nil] clock: time_t): tm;
		PROCEDURE [ccall] mktime* (VAR tm: tmDesc): time_t;

	(* POSIX.1 *)
		PROCEDURE [ccall] opendir* (filename: PtrSTR): PtrDIR;
		PROCEDURE [ccall] readdir* (dirp: PtrDIR): PtrDirent;
